name: Vangers Windows 64bit Build

on: [push, pull_request]

env: 
  VANGE_RS_REF: 5dae095d4d5bf13ba293b9e772657a004d808fc2

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
    - name: install libs
      run: msys2 -c 'pacman --noconfirm -S
        mingw-w64-x86_64-ninja
        mingw-w64-x86_64-gcc
        mingw-w64-x86_64-SDL2
        mingw-w64-x86_64-SDL2_net
        mingw-w64-x86_64-cmake
        mingw-w64-x86_64-libogg
        mingw-w64-x86_64-libvorbis
        mingw-w64-x86_64-nasm
        mingw-w64-x86_64-yasm
        mingw-w64-x86_64-make
        mingw-w64-x86_64-dlfcn
        unzip'
    - uses: actions/checkout@v1

    # TODO: enable cache
    # - name: vange-rs -- cache build
    #   uses: actions/cache@v2
    #   id: vange-rs-cache-build
    #   with:
    #     path: vange-rs/target/release/libvangers_ffi.a
    #     key: ${{ env.VANGE_RS_REF }}

    - name: vange-rs -- install rustup
      if: steps.vange-rs-cache-build.outputs.cache-hit != 'true'
      uses: actions-rs/toolchain@v1
      with:
            toolchain: stable
            target: x86_64-pc-windows-gnu
            default: true

    - name: vange-rs -- configure rustup
      if: steps.vange-rs-cache-build.outputs.cache-hit != 'true'
      run: rustup default stable-x86_64-pc-windows-gnu      

    - name: vange-rs -- download
      uses: actions/checkout@v2
      with:
        repository: lpenguin/vange-rs
        ref: ${{ env.VANGE_RS_REF }}
        path: vange-rs

    - name: vange-rs -- build
      if: steps.vange-rs-cache-build.outputs.cache-hit != 'true'
      run: cargo build --release --features env_logger     
      working-directory: vange-rs/lib/ffi

    - name: vange-rs -- copy artifacts to prefix
      run: msys2 -c 'cp vange-rs/target/release/librusty_vangers.a /mingw64/lib/'

    - name: ANGLE/GLES2 -- download
      run: |
        msys2 -c 'wget -O /mingw64/lib/libGLESv2.dll "https://github.com/lpenguin/libGLESv2-angle/releases/download/v2/libGLESv2.dll"'
        msys2 -c 'wget -O /mingw64/lib/libEGL.dll "https://github.com/lpenguin/libGLESv2-angle/releases/download/v2/libEGL.dll"'
      
    - name: clunk -- download
      run: git clone --depth 1 https://github.com/stalkerg/clunk.git clunk
    - name: clunk -- create build dir
      run: msys2 -c 'mkdir clunk/build'
    - name: clunk -- build and install
      run: |
        msys2 -c 'cmake -DCMAKE_INSTALL_PREFIX=/mingw64 -G Ninja ..'
        msys2 -c 'ninja'
        msys2 -c 'ninja install'
      working-directory: clunk/build
    - name: ffmpeg -- download
      run: git clone --depth 1 --branch n4.2.2 https://git.ffmpeg.org/ffmpeg.git ffmpeg
    - name: ffmpeg -- configure
      run: msys2 -c './configure --enable-shared --prefix=/mingw64
        --disable-everything
        --enable-swscale
        --enable-zlib
        --enable-demuxer=avi,rawvideo
        --enable-decoder=png,rawvideo,h264
        --enable-parser=png
        --enable-protocol=file
        --disable-d3d11va
        --disable-dxva2
        --disable-doc --disable-ffplay --disable-ffprobe --disable-ffmpeg
        --disable-static --disable-bzlib --disable-libopenjpeg --disable-iconv'
      working-directory: ffmpeg
    - name: ffmpeg -- build and install
      run: |
        msys2 -c 'mingw32-make -j4'
        msys2 -c 'mingw32-make install'
      working-directory: ffmpeg


    - name: vangers -- create build dir
      run: msys2 -c 'mkdir build'
    - name: vangers -- configure
      run: msys2 -c 'cmake -DCMAKE_BUILD_TYPE=Debug -G Ninja ..'
      working-directory: build
    - name: vangers -- make
      run: msys2 -c 'ninja'
      working-directory: build
    - name: vangers -- pdb
      run: |
        msys2 -c 'wget https://github.com/rainers/cv2pdb/releases/download/v0.50/cv2pdb-0.50.zip'
        msys2 -c 'unzip cv2pdb-0.50.zip'
        .\cv2pdb.exe vangers.exe
      working-directory: build/src
    - name: surmap -- pdb
      run: |
        ..\src\cv2pdb.exe surmap.exe
      working-directory: build/surmap
    - name: vangers -- prepare release folder
      run: |
        msys2 -c 'mkdir -p vangers/bin'
        msys2 -c 'cp /mingw64/bin/SDL2.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/SDL2_net.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/avcodec-58.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/avformat-58.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/avutil-56.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/libogg-0.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/libvorbis-0.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/libvorbisfile-3.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/zlib1.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/libgcc_s_dw2-1.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/libgcc_s_seh-1.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/libstdc++-6.dll vangers/bin/'
        msys2 -c 'cp /mingw64/bin/libwinpthread-1.dll vangers/bin/'
        cp clunk/build/libclunk.dll vangers/bin/
        cp build/src/vangers.exe vangers/bin/
        cp build/src/vangers.pdb vangers/bin/
        cp build/src/vangers.exe vangers/bin/vangers_debug.exe
        msys2 -c 'strip vangers/bin/vangers.exe'
        cp build/server/vangers_server.exe vangers/bin/
        cp build/server/vangers_server.exe vangers/bin/vangers_server_debug.exe
        msys2 -c 'strip vangers/bin/vangers_server.exe'
        cp build/surmap/surmap.exe vangers/bin/
        msys2 -c 'cp /mingw64/lib/libGLESv2.dll vangers/bin'
        msys2 -c 'cp /mingw64/lib/libEGL.dll vangers/bin'
        msys2 -c 'cp -r data/ vangers'
        msys2 -c 'cp -r vange-rs/res vangers/data'
        cp build/surmap/surmap.pdb vangers/bin/
    - uses: actions/upload-artifact@v1
      with:
        name: Vangers-Release-64
        path: vangers
